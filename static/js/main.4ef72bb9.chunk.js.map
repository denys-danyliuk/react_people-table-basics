{"version":3,"sources":["components/PageNavLink.tsx","components/Navbar.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","api.ts","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","title","className","isActive","classNames","Navbar","role","HomePage","Loader","PersonLink","person","slug","sex","name","PeopleTable","people","useParams","map","born","died","mother","motherName","father","fatherName","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","useEffect","peopleFromServer","preparedPeople","find","parent","catch","finally","length","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.4ef72bb9.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string,\n  title: string,\n}\n\nexport const PageNavLink: FC<Props> = ({ to, title }) => (\n  <NavLink\n    className={({ isActive }) => classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n    to={to}\n  >\n    {title}\n  </NavLink>\n);\n","import { PageNavLink } from './PageNavLink';\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" title=\"Home\" />\n        <PageNavLink to=\"/people\" title=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonLink: FC<Props> = ({ person }) => (\n  <NavLink\n    to={`/people/${person.slug}`}\n    className={person.sex === 'f' ? 'has-text-danger' : ''}\n  >\n    {person.name}\n  </NavLink>\n);\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ninterface Props {\n  people: Person[],\n}\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const { slug = '' } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            key={person.slug}\n            data-cy=\"person\"\n            className={slug === person.slug ? 'has-background-warning' : ''}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.mother ? (\n                <PersonLink person={person.mother} />\n              ) : (\n                person.motherName || '-'\n              )}\n            </td>\n            <td>\n              {person.father ? (\n                <PersonLink person={person.father} />\n              ) : (\n                person.fatherName || '-'\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(peopleFromServer => {\n        const preparedPeople = peopleFromServer.map(person => ({\n          ...person,\n          mother: peopleFromServer.find(\n            parent => parent.name === person.motherName,\n          ),\n          father: peopleFromServer.find(\n            parent => parent.name === person.fatherName,\n          ),\n        }));\n\n        setPeople(preparedPeople);\n      })\n      .catch(() => setHasError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people?.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\" element={<PeoplePage />} />\n          <Route path=\"/people/:slug\" element={<PeoplePage />} />\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}